{"version":3,"sources":["components/Form.jsx","components/Pets.jsx","components/Edit.jsx","components/Pet.jsx","App.js","serviceWorker.js","index.js"],"names":["Form","props","useState","name","setName","type","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","likes","class","className","onSubmit","e","preventDefault","Pet","axios","post","then","res","console","log","data","navigate","catch","err","addPet","placeholder","onChange","target","value","message","Pets","pets","setPets","useEffect","get","all","map","pet","key","_id","to","onClick","id","navEdit","href","Edit","setPet","put","updatePet","delete","adoptPet","App","active","setActive","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"oPAsEeA,EAjEF,SAACC,GAAW,IAAD,EACEC,mBAAS,IADX,mBACfC,EADe,KACTC,EADS,OAEEF,mBAAS,IAFX,mBAEfG,EAFe,KAETC,EAFS,OAGgBJ,mBAAS,IAHzB,mBAGfK,EAHe,KAGFC,EAHE,OAIMN,mBAAS,IAJf,mBAIfO,EAJe,KAIPC,EAJO,OAKMR,mBAAS,IALf,mBAKfS,EALe,KAKPC,EALO,OAMMV,mBAAS,IANf,mBAMfW,EANe,KAMPC,EANO,OAOMZ,mBAAS,IAPf,mBAOfa,EAPe,KAOPC,EAPO,OAQId,mBAAS,GARb,mBAQfe,EARe,UA8BtB,OACE,oCACE,yBAAKC,MAAM,aACT,wBAAIA,MAAM,aAAV,+BACA,uBAAGA,MAAM,QAAT,gCACA,wBAAIA,MAAM,UAEd,yBAAKC,UAAU,iCACX,0BAAMC,SAAW,SAACC,GAAD,OA1BR,SAACA,GACdA,EAAEC,iBACF,IACIC,EAAM,CAAEpB,OAAME,OAAME,cAAaE,SAAQE,SAAQE,SAAQI,SAC7DO,IAAMC,KAAK,kCAAmCF,GAC3CG,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,KAAKf,QACjBY,EAAIG,KAAKf,OACXC,EAAUW,EAAIG,KAAKf,SAGnBa,QAAQC,IAAI,YACZE,YAAS,SAGZC,OAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,MAWAC,CAAOb,IAAKF,UAAU,oBAC5C,2BAAOA,UAAU,mBAAmBgB,YAAY,QAAQ9B,KAAK,OAAQ+B,SAAY,SAACf,GAAD,OAAKjB,EAAQiB,EAAEgB,OAAOC,UACtGvB,EAAOZ,KACN,uBAAGgB,UAAU,eAAeJ,EAAOZ,KAAKoC,SACtC,GACJ,2BAAOpB,UAAU,mBAAmBgB,YAAY,QAAQ9B,KAAK,OAAO+B,SAAU,SAACf,GAAD,OAAOf,EAAQe,EAAEgB,OAAOC,UACrGvB,EAAOV,KACN,uBAAGc,UAAU,eAAeJ,EAAOV,KAAKkC,SACtC,GACJ,2BAAOpB,UAAU,mBAAmBgB,YAAY,eAAe9B,KAAK,OAAO+B,SAAU,SAACf,GAAD,OAAOb,EAAea,EAAEgB,OAAOC,UACnHvB,EAAOR,YACN,uBAAGY,UAAU,eAAeJ,EAAOR,YAAYgC,SAC7C,GACJ,6BACA,yBAAKpB,UAAU,cACb,2BAAOA,UAAU,mBAAmBgB,YAAY,WAAW9B,KAAK,OAAO+B,SAAU,SAACf,GAAD,OAAOX,EAAUW,EAAEgB,OAAOC,UAC3G,2BAAOnB,UAAU,mBAAmBgB,YAAY,WAAW9B,KAAK,OAAO+B,SAAU,SAACf,GAAD,OAAOT,EAAUS,EAAEgB,OAAOC,UAC3G,2BAAOnB,UAAU,mBAAmBgB,YAAY,WAAW9B,KAAK,OAAO+B,SAAU,SAACf,GAAD,OAAOP,EAAUO,EAAEgB,OAAOC,WAG7G,2BAAOnB,UAAU,2BAA2Bd,KAAK,eCE5CmC,EA3DF,SAACvC,GAAW,IAAD,EAGEC,mBAAS,IAHX,mBAGfuC,EAHe,KAGTC,EAHS,KAsBtB,OAJFC,qBAAU,WAPNnB,IAAMoB,IAAI,kCACPlB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,KAAKe,KACrBH,EAAQf,EAAIG,KAAKe,QAElBb,OAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,QAI3B,CAAChC,IAGF,oCACE,yBAAKiB,MAAM,aACT,wBAAIA,MAAM,aAAV,wBACA,uBAAGA,MAAM,QAAT,kCACA,wBAAIA,MAAM,UAIV,yBAAKC,UAAU,0CACf,2BAAOA,UAAU,8CACf,2BAAOA,UAAU,iBACf,4BACE,mCACA,oCACA,wCAGF,+BACCsB,EAAKK,KAAI,SAAAC,GAAG,OACX,wBAAIC,IAAOD,EAAIE,KACb,4BAAKF,EAAI5C,MACT,4BAAK4C,EAAI1C,MACP,4BACE,kBAAC,IAAD,CAAM6C,GAAIH,EAAIE,KAAd,aACG,MACL,uBAAGE,QAAS,SAAC9B,GAAD,OA3CZ,SAACA,EAAG+B,GAClB/B,EAAEC,iBACFS,YAAS,QAAD,OAASqB,IAyCgBC,CAAQhC,EAAG0B,EAAIE,MAAKK,KAAK,KAA5C,kBCwCHC,EAzFF,SAACtD,GAAW,IAAD,EAEAC,mBAAS,IAFT,mBAEf6C,EAFe,KAEVS,EAFU,OAGEtD,mBAAS,IAHX,mBAGfC,EAHe,KAGTC,EAHS,OAIEF,mBAAS,IAJX,mBAIfG,EAJe,KAITC,EAJS,OAKgBJ,mBAAS,IALzB,mBAKfK,EALe,KAKFC,EALE,OAMMN,mBAAS,IANf,mBAMfO,EANe,KAMPC,EANO,OAOMR,mBAAS,IAPf,mBAOfS,EAPe,KAOPC,EAPO,OAQMV,mBAAS,IARf,mBAQfW,EARe,KAQPC,EARO,OASMZ,mBAAS,IATf,mBASfa,EATe,KASPC,EATO,KAatB2B,qBAAU,WACRnB,IAAMoB,IAAN,yCAA4C3C,EAAMmD,KAE/C1B,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,MAChB0B,EAAO7B,EAAIG,MACX1B,EAAQuB,EAAIG,KAAK3B,MACjBG,EAAQqB,EAAIG,KAAKzB,MACjBG,EAAemB,EAAIG,KAAKvB,aAExBG,EAAUiB,EAAIG,KAAKrB,QACnBG,EAAUe,EAAIG,KAAKnB,QACnBG,EAAUa,EAAIG,KAAKjB,QACnBe,QAAQC,IAAIF,MAEbK,OAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,QAC3B,IAyBH,OACE,oCACE,yBAAKf,MAAM,aACT,wBAAIA,MAAM,aAAV,kBACA,uBAAGA,MAAM,QAAT,4DACA,wBAAIA,MAAM,UAEZ,6BACE,0BAAME,SAAW,SAACC,GAAD,OA1BL,SAACA,EAAG+B,GACpBxB,QAAQC,IAAIuB,GACZ/B,EAAEC,iBACF,IAAIC,EAAM,CAAEpB,OAAME,OAAME,cAAaE,SAAQE,SAAQE,UACrDW,IAAMiC,IAAN,yCAA4CL,GAAM7B,GAC/CG,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACRA,EAAIG,KAAKf,OACXC,EAAUW,EAAIG,KAAKf,QAGnBgB,YAAS,IAAD,OAAKqB,OAGhBpB,OAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,MAYAyB,CAAUrC,EAAG0B,EAAIE,MAAO9B,UAAU,oBACxD,2BAAOA,UAAU,mBAAmBmB,MAAQnC,EAAOE,KAAK,OAAQ+B,SAAY,SAACf,GAAD,OAAKjB,EAAQiB,EAAEgB,OAAOC,UACjGvB,EAAOZ,KACN,uBAAGgB,UAAU,eAAeJ,EAAOZ,KAAKoC,SACtC,GACJ,2BAAOpB,UAAU,mBAAmBmB,MAAQjC,EAAOA,KAAK,OAAO+B,SAAU,SAACf,GAAD,OAAOf,EAAQe,EAAEgB,OAAOC,UAChGvB,EAAOV,KACN,uBAAGc,UAAU,eAAeJ,EAAOV,KAAKkC,SACtC,GACJ,2BAAOpB,UAAU,mBAAmBmB,MAAQ/B,EAAcF,KAAK,OAAO+B,SAAU,SAACf,GAAD,OAAOb,EAAea,EAAEgB,OAAOC,UAC9GvB,EAAOR,YACN,uBAAGY,UAAU,eAAeJ,EAAOR,YAAYgC,SAC7C,GACJ,6BACA,yBAAKpB,UAAU,cACb,2BAAOA,UAAU,mBAAmBmB,MAAQ7B,EAASJ,KAAK,OAAO+B,SAAU,SAACf,GAAD,OAAOX,EAAUW,EAAEgB,OAAOC,UACrG,2BAAOnB,UAAU,mBAAmBmB,MAAQ3B,EAASN,KAAK,OAAO+B,SAAU,SAACf,GAAD,OAAOT,EAAUS,EAAEgB,OAAOC,UACrG,2BAAOnB,UAAU,mBAAmBmB,MAAQzB,EAASR,KAAK,OAAO+B,SAAU,SAACf,GAAD,OAAOP,EAAUO,EAAEgB,OAAOC,WAEvG,2BAAOnB,UAAU,2BAA2Bd,KAAK,eCnB5CkB,EA/DH,SAACtB,GAAW,IAAD,EAECC,mBAAS,IAFV,mBAEd6C,EAFc,KAETS,EAFS,KAMrBb,qBAAU,WACRnB,IAAMoB,IAAN,yCAA4C3C,EAAMmD,KAC/C1B,MAAK,SAAAC,GACF6B,EAAO7B,EAAIG,SAEdE,OAAM,SAAAC,GACLL,QAAQC,IAAII,QAEf,CAAChC,IAeJ,OACE,oCACE,yBAAKiB,MAAM,aACT,wBAAIA,MAAM,aAAV,qBACA,uBAAGA,MAAM,QAAT,8BACA,wBAAIA,MAAM,UAEV,6BACI,4BACIiC,QAAS,SAAC9B,GAAD,OApBN,SAACA,EAAG+B,GACnB/B,EAAEC,iBACFE,IAAMmC,OAAN,yCAA+CP,IAC1C1B,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZI,YAAS,QAEVC,OAAM,SAAAC,GAAG,OAAIL,QAAQC,IAAII,MAaD2B,CAASvC,EAAG0B,EAAIE,MACvC9B,UAAU,8BAFR,oBAIN,yBAAKA,UAAU,kFACb,yBAAKA,UAAU,6BACX,2BAAG,yCACH,2BAAG,yCACH,2BAAG,gDACH,2BAAG,2CAEP,yBAAKA,UAAU,6BACX,2BAAK4B,EAAI5C,MACT,2BAAI4C,EAAI1C,MACR,2BAAI0C,EAAIxC,aACR,2BACCwC,EAAItC,OADL,IACc,IACbsC,EAAIpC,OAFL,IAEc,IACboC,EAAIlC,YC5BFgD,MAtBf,WAAgB,IAAD,EACiB3D,mBAAS,KAD1B,mBACJ4D,EADI,KACIC,EADJ,KAEb,OACE,yBAAK5C,UAAU,OACT,wBAAIA,UAAU,qBAClB,wBAAIA,UAAU,WAAWgC,QAAS,SAAA9B,GAAC,OAAI0C,EAAU,OAC/C,kBAAC,IAAD,CAAM5C,UAAuB,MAAX2C,EAAiB,kBAAoB,WAAaZ,GAAG,KAAvE,SAEF,wBAAI/B,UAAU,WAAWgC,QAAS,SAAA9B,GAAC,OAAI0C,EAAU,UAC/C,kBAAC,IAAD,CAAM5C,UAAuB,SAAX2C,EAAoB,kBAAoB,WAAaZ,GAAG,QAA1E,aAGF,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAMc,KAAK,SACX,kBAAC,EAAD,CAAMA,KAAK,MACX,kBAAC,EAAD,CAAKA,KAAK,SACV,kBAAC,EAAD,CAAMA,KAAK,iBCbCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnD,MAAK,SAAAoD,GACJA,EAAaC,gBAEd/C,OAAM,SAAAgD,GACLpD,QAAQoD,MAAMA,EAAMzC,c","file":"static/js/main.6683de48.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { navigate } from \"@reach/router\";\n\n\nconst Form = (props) => {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skill1, setSkill1] = useState(\"\");\n  const [skill2, setSkill2] = useState(\"\");\n  const [skill3, setSkill3] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [likes, setLikes] = useState(0);\n\n\n  //------------ create ------------------------\n  const addPet = (e) => {\n    e.preventDefault();\n    let temp = [];\n    let Pet = { name, type, description, skill1, skill2, skill3, likes }\n    axios.post(\"http://localhost:8000/api/belt/\", Pet)\n      .then(res => {\n        console.log(res.data.errors);\n        if (res.data.errors) {\n          setErrors(res.data.errors);\n        }\n        else {\n          console.log(\"no error\")\n          navigate(\"/\")\n        }\n      })\n      .catch(err => console.log(err));\n  }\n  //---------------------------------------------\n  return (\n    <>\n      <div class=\"jumbotron\">\n        <h1 class=\"display-3\">Submit a pet to the shelter</h1>\n        <p class=\"lead\">We have a 100% adoption rate</p>\n        <hr class=\"my-2\"></hr>\n      </div>\n    <div className=\"d-flex justify-content-center\">\n        <form onSubmit={ (e) => addPet(e) } className=\"form-group col-3\">\n          <input className=\"m-2 form-control\" placeholder=\"Name:\" type=\"text\"  onChange = {(e)=>setName(e.target.value)}/>\n          {errors.name ?\n            <p className=\"text-danger\">{errors.name.message}</p>\n            : \"\"}\n          <input className=\"m-2 form-control\" placeholder=\"Type:\" type=\"text\" onChange={(e) => setType(e.target.value)} />\n          {errors.type ?\n            <p className=\"text-danger\">{errors.type.message}</p>\n            : \"\"}\n          <input className=\"m-2 form-control\" placeholder=\"Description:\" type=\"text\" onChange={(e) => setDescription(e.target.value)} />\n          {errors.description ?\n            <p className=\"text-danger\">{errors.description.message}</p>\n            : \"\"}\n          <br></br>\n          <div className=\"form-group\">\n            <input className=\"m-2 form-control\" placeholder=\"Skill 1:\" type=\"text\" onChange={(e) => setSkill1(e.target.value)} />\n            <input className=\"m-2 form-control\" placeholder=\"Skill 2:\" type=\"text\" onChange={(e) => setSkill2(e.target.value)} />\n            <input className=\"m-2 form-control\" placeholder=\"Skill 3:\" type=\"text\" onChange={(e) => setSkill3(e.target.value)} />\n          </div>\n         \n          <input className=\"m-2 btn btn-outline-dark\" type=\"submit\"/>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default Form;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, navigate } from \"@reach/router\";\n\n\n\nconst Pets = (props) => {\n\n  \n  const [pets, setPets] = useState([])\n\n  const navEdit = (e, id) => {\n    e.preventDefault();\n    navigate(`edit/${id}`);\n  }\n  \n  const getPets = () => {\n    axios.get(\"http://localhost:8000/api/belt\") \n      .then(res => {\n        console.log(res.data.all);\n        setPets(res.data.all);\n      })\n      .catch(err => console.log(err));\n  }\nuseEffect(() => {\n    getPets();\n  }, [props]);\n\n  return (\n    <>\n      <div class=\"jumbotron\">\n        <h1 class=\"display-3\">View all of our pets</h1>\n        <p class=\"lead\">Our pets have special skills. </p>\n        <hr class=\"my-2\"></hr>\n        \n      </div>\n        \n        <div className=\"d-flex flex-row justify-content-center\">\n        <table className=\"table table-striped table-responsive col-4\">\n          <thead className=\"thead-inverse\">\n            <tr>\n              <th>pet</th>\n              <th>type</th>\n              <th>Action</th>\n            </tr>\n            </thead>\n            <tbody>\n            {pets.map(pet => \n              <tr key = {pet._id}>\n                <td>{pet.name}</td>\n                <td>{pet.type}</td>\n                  <td>\n                    <Link to={pet._id} > display </Link>\n                      {\" | \"}\n                  <a onClick={(e) => navEdit(e, pet._id)}href=\"#\">edit</a>\n                    {/* <a href=\"#\" onClick={(e) => editPet(e, pet._id)}>display</a> */}\n                  </td>\n              </tr>\n              )}\n            </tbody>\n            </table>\n      </div>\n      </>\n    );\n}\nexport default Pets;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\n\nconst Edit = (props) => {\n\n  const [pet, setPet] = useState({})\n  const [name, setName] = useState(\"\")\n  const [type, setType] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [skill1, setSkill1] = useState(\"\")\n  const [skill2, setSkill2] = useState(\"\")\n  const [skill3, setSkill3] = useState(\"\")\n  const [errors, setErrors] = useState({});\n\n\n  // -------------- retrieve item from db -------------------\n  useEffect(() => {\n    axios.get(`http://localhost:8000/api/belt/${props.id}`)\n      \n      .then(res => {\n        console.log(res.data)\n        setPet(res.data)\n        setName(res.data.name);\n        setType(res.data.type);\n        setDescription(res.data.description);\n        // console.log(typeof(res.data.description))\n        setSkill1(res.data.skill1)\n        setSkill2(res.data.skill2)\n        setSkill3(res.data.skill3)\n        console.log(res);\n      })\n      .catch(err => console.log(err));\n  }, []);//--------------------------------------------------\n\n\n\n  \n\n  //--------------- updating item in db --------------------\n  const updatePet = (e, id) => {\n    console.log(id)\n    e.preventDefault();\n    let Pet = { name, type, description, skill1, skill2, skill3 };\n    axios.put(`http://localhost:8000/api/belt/${id}`, Pet)\n      .then(res => {\n        console.log(res);\n        if (res.data.errors) {\n          setErrors(res.data.errors);\n        }\n        else {\n          navigate(`/${id}`)\n        }\n      })\n      .catch(err => console.log(err));\n  }//--------------------------------------------------------\n\n\n  return (\n    <>\n      <div class=\"jumbotron\">\n        <h1 class=\"display-3\">Edit Your pet!</h1>\n        <p class=\"lead\">Notice something different about your pet? Update below.</p>\n        <hr class=\"my-2\"></hr>\n      </div>\n      <div>\n        <form onSubmit={ (e) => updatePet(e, pet._id) } className=\"form-group col-3\">\n          <input className=\"m-2 form-control\" value={ name } type=\"text\"  onChange = {(e)=>setName(e.target.value)}/>\n          {errors.name ?\n            <p className=\"text-danger\">{errors.name.message}</p>\n            : \"\"}\n          <input className=\"m-2 form-control\" value={ type } type=\"text\" onChange={(e) => setType(e.target.value)} />\n          {errors.type ?\n            <p className=\"text-danger\">{errors.type.message}</p>\n            : \"\"}\n          <input className=\"m-2 form-control\" value={ description } type=\"text\" onChange={(e) => setDescription(e.target.value)} />\n          {errors.description ?\n            <p className=\"text-danger\">{errors.description.message}</p>\n            : \"\"}\n          <br></br>\n          <div className=\"form-group\">\n            <input className=\"m-2 form-control\" value={ skill1 } type=\"text\" onChange={(e) => setSkill1(e.target.value)} />\n            <input className=\"m-2 form-control\" value={ skill2 } type=\"text\" onChange={(e) => setSkill2(e.target.value)} />\n            <input className=\"m-2 form-control\" value={ skill3 } type=\"text\" onChange={(e) => setSkill3(e.target.value)} />\n          </div>\n          <input className=\"m-2 btn btn-outline-dark\" type=\"submit\"/>\n        </form>\n      </div>\n\n\n    </>\n  );\n}\nexport default Edit;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst Pet = (props) => {\n\n  const [pet, setPet] = useState({})\n\n\n// -------------- retrieve item from db -------------------\n  useEffect(() => {\n    axios.get(`http://localhost:8000/api/belt/${props.id}`)\n      .then(res => {\n          setPet(res.data)\n      })\n      .catch(err => {\n        console.log(err)\n    });\n  }, [props]);//--------------------------------------------\n\n\n//------------- delete item from db ------------------------\n  const adoptPet = (e, id) => {\n    e.preventDefault();\n    axios.delete(`http://localhost:8000/api/belt/${id}`)\n        .then(res => {\n          console.log(res);\n          navigate(\"/\")\n        })\n        .catch(err => console.log(err));\n  } //-------------------------------------------------------\n\n\n  return (\n    <>\n      <div class=\"jumbotron\">\n        <h1 class=\"display-3\">Your Pets Details</h1>\n        <p class=\"lead\">Every pet is a special pet</p>\n        <hr class=\"my-2\"></hr>\n      </div>\n        <div>\n            <button\n                onClick={(e) =>  adoptPet(e, pet._id) }\n          className=\"m-4 btn btn-outline-danger\">Adopt this pet!</button>\n        </div>\n      <div className=\"d-flex justify-content-center flex-row border border-dark text-center m-4 py-3\">\n        <div className=\"text-left m-4 flex-column\">\n            <p><b>Pet Name:</b></p>\n            <p><b>Pet Type:</b></p>\n            <p><b>Pet Description:</b></p>\n            <p><b>Pet Skills</b></p>\n        </div>\n        <div className=\"text-left m-4 flex-column\">\n            <p >{pet.name}</p>\n            <p>{pet.type}</p>\n            <p>{pet.description}</p>\n            <p> \n            {pet.skill1} {\" \"} \n            {pet.skill2} {\" \"}\n            {pet.skill3}\n            </p>\n          </div>\n        </div>\n      </>\n\n    );\n}\nexport default Pet;","import React, { useState } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Router, Link} from \"@reach/router\";\nimport Form from './components/Form';\nimport Pets from './components/Pets';\nimport Edit from './components/Edit';\nimport Pet from './components/Pet';\n\n\nfunction App() {\n    const [active, setActive] = useState(\"/\")\n  return (\n    <div className=\"App\">\n          <ul className=\"nav nav-tabs mb-5\">\n      <li className=\"nav-item\" onClick={e => setActive(\"/\")} >\n        <Link className={ active === \"/\" ? \"nav-link active\" : \"nav-link\" } to=\"/\">Home</Link>\n      </li>\n      <li className=\"nav-item\" onClick={e => setActive(\"/new\")}>\n        <Link className={ active === \"/new\" ? \"nav-link active\" : \"nav-link\" } to=\"/new\">New Pet</Link>\n      </li>\n    </ul>\n      <Router>\n        <Form path=\"/new\" />\n        <Pets path=\"/\" />\n        <Pet path=\"/:id\" />\n        <Edit path=\"/edit/:id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}